name: deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    if: contains(github.event.head_commit.message, '[release]')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .net core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Build with dotnet
      run: dotnet build ./source/Celerik.NetCore.Util.sln --configuration Release
    - name: Run unit tests
      run: dotnet test ./source/Celerik.NetCore.Util.Test/Celerik.NetCore.Util.Test.csproj
    - name: Generate coverage report
      run: |
        cd ./source/Celerik.NetCore.Util.Test/
        dotnet test /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
    - name: Publish coverage report to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./source/Celerik.NetCore.Util.Test/TestResults/coverage.info

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Pack nuget package
      run: dotnet pack ./source/Celerik.NetCore.Util.sln --configuration Release -o package
    - name: Publish package artifact
      uses: actions/upload-artifact@master
      with:
        name: nupkg
        path: package
    - name: Publish package to nuget.org
      run: dotnet nuget push **/*.nupkg
           --api-key ${{ secrets.CELERIK_NUGET_API_KEY }}
           --source https://api.nuget.org/v3/index.json
    - name: Publish package to github.com
      run: dotnet nuget push **/*.nupkg --source "github"

  release:
    needs: deploy
    runs-on: ubuntu-latest
        
    steps:
    - uses: actions/checkout@v2
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "nupkg"
        token: ${{ secrets.GITHUB_TOKEN }}
